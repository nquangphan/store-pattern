// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using BlueCoffeeManagement;
//
//    var tableModel = TableModel.FromJson(jsonString);

namespace BlueCoffeeManagement
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class TableModel
    {
        [JsonProperty("localId")]
        public long LocalId { get; set; }

        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("table_number")]
        public long TableNumber { get; set; }

        [JsonProperty("order_items")]
        public List<OrderItem> OrderItems { get; set; }

        [JsonProperty("start_date")]
        public string StartDate { get; set; }

        [JsonProperty("end_date")]
        public string EndDate { get; set; }

        [JsonProperty("status")]
        public long Status { get; set; }

        [JsonProperty("isDeliveried")]
        public long IsDeliveried { get; set; }

        [JsonProperty("isSync")]
        public long IsSync { get; set; }

        [JsonProperty("date")]
        public string Date { get; set; }

        [JsonProperty("tableColor")]
        public long TableColor { get; set; }

        public long getGrandTotal()
        {
            long grandTotal = 0;
            for (int i = 0; i < this.OrderItems.Count; i++) {
                grandTotal += (this.OrderItems[i].Quantity * this.OrderItems[i].Drink.Price);
            }
                return grandTotal;
        }
    }

    public partial class OrderItem
    {
        [JsonProperty("localId")]
        public long LocalId { get; set; }

        [JsonProperty("drink")]
        public Drink Drink { get; set; }

        [JsonProperty("quantity")]
        public long Quantity { get; set; }

        [JsonProperty("additional")]
        public long Additional { get; set; }

        [JsonProperty("status")]
        public long Status { get; set; }

        [JsonProperty("tableID")]
        public string TableId { get; set; }

        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("drinkID")]
        public string DrinkId { get; set; }

        [JsonProperty("isSync")]
        public long IsSync { get; set; }
    }

    public partial class Drink
    {
        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("image")]
        public Uri Image { get; set; }

        [JsonProperty("price")]
        public long Price { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("isSync")]
        public long IsSync { get; set; }
    }

    public partial class TableModel
    {
        public static TableModel FromJson(string json) => JsonConvert.DeserializeObject<TableModel>(json, BlueCoffeeManagement.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this TableModel self) => JsonConvert.SerializeObject(self, BlueCoffeeManagement.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
